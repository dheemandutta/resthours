
@{
    ViewBag.Title = "Time";
}

<h2>Time</h2>


<style type="text/css">
    table {
        width: 100%;
        margin-bottom: 20px;
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid #cdcdcd;
    }

        table th, table td {
            padding: 10px;
            text-align: left;
        }
</style>
<style>
    .glyphicon-none:before {
        content: "\2122";
        color: transparent !important;
    }
</style>


@*<table id="certtable" class="display" cellspacing="0" width="100%">
    <thead>
        <tr>
            <td>
                <label for="InstallTime">Time 1</label>
                &nbsp;<input type="text" id="Time1" placeholder="Time" />
            </td>
            <td>
                <label for="InstallTime">Time 2</label>
                &nbsp;<input type="text" id="Time2" placeholder="Time" />
            </td>
    </thead>
</table>*@














<html>
<head>
    <meta content="text/html;charset=utf-8" http-equiv="Content-Type">
    <meta content="utf-8" http-equiv="encoding">
    <script type="text/javascript" src="jquery.js"></script>
    <script type="text/javascript">
       
      
    </script>
</head>
<body>
    <table id="cloneTable" class="table-responsive" >
        <tr class="clonrow">
            <td><input type='text'  name='name' class="form-control timepicker" readonly="readonly"></td>
            <td ><input type='text'  name='id' class="form-control timepicker" readonly="readonly"></td>
            <td>&nbsp;&nbsp;&nbsp;</td>
            <td>&nbsp;&nbsp;&nbsp;</td>
        </tr>
        <tr class="clonrow">
            <td><input type='text'  name='name' class="form-control timepicker" readonly="readonly"></td>
            <td><input type='text'  name='id' class="form-control timepicker" readonly="readonly"></td>
            <td>&nbsp;&nbsp;&nbsp;</td>
            <td>&nbsp;&nbsp;&nbsp;</td>
        </tr>
        <tr class="clonrow">
            <td><input type='text'  name='name' class="form-control timepicker" readonly="readonly"></td>
            <td><input type='text'  name='id' class="form-control timepicker" readonly="readonly"></td>
            <td><a href="#" class="addbtn">Add</a></td>
            <td><a href="#"  class="delbtn">Delete</a></td>
        </tr>
    </table>
</body>
</html>


  @section Scripts
    {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")
    <link href="~/Content/TimePicker/jquery.timepicker.min.css" rel="stylesheet" />
    <script src="~/Scripts/TimePicker/jquery.timepicker.min.js"></script>
    <style>
        .ui-timepicker-container {
            z-index: 1151 !important;
        }
    </style>
    <script type="text/javascript">
        $(document).ready(function () {


            /*Global count to set the attribute id*/
            var count = 1;

            /*Clone row using the table name*/
            function addCloneMappingRow() {
               // alert('kk');
                //var table = document.getElementById(id);
               // if (table) {
                    //create a original copy of the row to clone later
                    var $tr = $('table.table-responsive tr.clonrow:nth-child(3)').clone();
                    var newRow = $tr.clone();//lastRow.cloneNode(true);
                    //add dp to the new row
                    addTP(newRow.find('input.timepicker'));

                    //console.log(newRow);

                    $(newRow).find('input, hidden, select, textarea, checkbox').each(function () {
                        var currentNameAttr = $(this).attr('name');
                        // get the current name attribute
                        // construct a new name attribute using regular expressions
                        // the match is divided into three groups (indicated by parentheses)
                        // p1 will be 'v', p2 will be the number, p3 will be the remainder of the string
                        var newNameAttr = currentNameAttr.replace(/([^\d]*)(\d*)([^\w]*)/, function (match, p1, p2, p3) {
                            return p1 + (count) + p3;
                        });
                        $(this).attr('name', newNameAttr);
                        if (newNameAttr.indexOf("id") !== -1) {
                            $(this).attr('value', '');
                        } else {
                        }
                    });
                    //tbody.append(newRow);
                    //alert(newRow);
                    //debugger;
                    $('table.table-responsive').append(newRow);
                
                count++;
            }

            

            function addTP($els) {
                $els.timepicker({
                    timeFormat: 'h:mm p',
                    interval: 30,
                    defaultTime: '01',
                    startTime: '10:00',
                    dynamic: false,
                    dropdown: true,
                    scrollbar: true

                });
            }

            //add dp to existing rows
            addTP($('input.timepicker'));

            $('table.table-responsive').on('click','.addbtn',function(){
                addCloneMappingRow();
            });

            $('table.table-responsive').on('click', '.delbtn', function () {
                //deleteCloneMappingRow(this);
                if (count <= 1) {
                    alert("No Privilege to Remove");
                    return false;
                }
                else {

                    $(this).parent().parent().remove();
                    count--;
                }
            });
            

        });


    </script>
}
